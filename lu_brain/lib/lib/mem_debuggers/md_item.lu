/**
	Copyright Â© 2022 Oleh Ihorovych Novosad 
*/

///////////////////////////////////////////////////////////////////////////////
// Lu_Md_Item 

	Lu_Md_Item lu_md_item_create()
	{
		Lu_Md_Item self = (Lu_Md_Item) calloc(1, sizeof(struct lu_md_item));
		lu__assert(self);

		self->address			= NULL;
		self->size 				= 0;
		self->alloc_path[0]		= 0;
		self->freed_path[0]		= 0;
		self->line 				= 0;

		self->prev				= NULL;
		self->next				= NULL;

		return self;
	}

	void lu_md_item_destroy(Lu_Md_Item self, lu_bool deallocate_address)
	{
		lu__assert(self);

		// unlink
		if (self->next)
			self->next->prev = self->prev;

		if (self->prev)
			self->prev->next = self->next;

		self->prev = NULL;
		self->next = NULL;

		if (deallocate_address && self->address)
			free((lu_p_void) self->address);

		free((lu_p_void) self);
	}