/**
	Copyright Â© 2021 Oleh Ihorovych Novosad 
*/


///////////////////////////////////////////////////////////////////////////////
// Lu_Mem_With_Stats 

	// Alloc, realloc and free
	lu_p_byte lu_mem_with_stats_alloc_internal(Lu_Mem mem, lu_size size, const char* func, const char* file, int line)
	{
		Lu_Mem_With_Stats self = (Lu_Mem_With_Stats) mem;
		size_t* ret = (size_t*) lu_mem_alloc(self->parent_mem, sizeof(size_t) + size);
		*ret = size;
		return (lu_p_byte) &ret[1];
	}

	lu_p_byte lu_mem_with_stats_realloc_internal(Lu_Mem self, lu_p_byte p, lu_size size_in_bytes, const char* func, const char* file, int line)
	{

	}

	void lu_mem_with_stats_free_internal(Lu_Mem mem, lu_p_byte p, const char* func, const char* file, int line)
	{
		Lu_Mem_With_Stats self = (Lu_Mem_With_Stats) mem;
		lu_mem_free(self->parent_mem, (lu_p_byte)((size_t*)p - 1));
	}

	// Destroy memory
	void lu_mem_with_stats_destroy_internal(Lu_Mem self, Lu_Mem parent_mem, const char* func, const char* file, int line)
	{

	}

	// Memory stats

	lu_size lu_mem_with_stats_used_internal(Lu_Mem self)
	{

	}

///////////////////////////////////////////////////////////////////////////////
// Lu_Mem_With_Stats Create

	Lu_Mem_With_Stats lu_mem_with_stats_create(Lu_Mem parent_mem)
	{
		Lu_Mem_With_Stats self = (Lu_Mem_With_Stats) lu_mem_alloc(parent_mem, sizeof(struct lu_mem_with_stats));
		lu_assert(self);

 		self->parent_mem 		= parent_mem;
		self->alloc_count 		= 0;
		self->free_count 		= 0;
		self->realloc_count 	= 0;
		self->allocated_size 	= 0;
		self->freed_size 		= 0;

		// alloc, realloc, free
		self->super.alloc 			= lu_mem_with_stats_alloc_internal;
		self->super.realloc 		= lu_mem_with_stats_realloc_internal;
		self->super.free 			= lu_mem_with_stats_free_internal;

		// destroy
		self->super.destroy 		= lu_mem_with_stats_destroy_internal;

		// stats
		self->super.preallocated 	= self->parent_mem->preallocated;
		self->super.used 			= lu_mem_with_stats_used_internal;

		// table create
		self->super.table_create 	= self->parent_mem->table_create;

		return self;
	}