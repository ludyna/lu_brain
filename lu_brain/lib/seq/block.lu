/**
	Copyright Â© 2022 Oleh Ihorovych Novosad 
*/

///////////////////////////////////////////////////////////////////////////////
// 

	static Lu_Block lu_block__create(Lu_Mem mem, lu_size recs_size)
	{	
		lu__assert(mem);
		lu__assert(recs_size > 0);


		Lu_Block self = (Lu_Block) lu_mem__alloc(mem, sizeof(struct lu_block));
 
 		self->mem = mem;
 		self->datum_size = recs_size;
 		self->datum = (struct lu_data*) lu_mem__alloc(self->mem, sizeof(struct lu_data) * self->datum_size);

 		Lu_Data data;
 		for(lu_size i = 0; i < self->datum_size; i++)
 		{
 			data = &self->datum[i];
 			lu_data__init_default(data);
 		}

		return self;
	}

	static void lu_block__destroy(Lu_Block self)
	{
		lu__assert(self);

		lu_mem__free(self->mem, (lu_p_byte) self->datum);
		lu_mem__free(self->mem, (lu_p_byte) self);
	}


