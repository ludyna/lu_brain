/**
	Copyright Â© 2022 Oleh Ihorovych Novosad 
*/


///////////////////////////////////////////////////////////////////////////////
// 


	static Lu_Label_Map lu_label_map__init(Lu_Label_Map self, Lu_Mem mem, lu_size labels_size, lu_size h, lu_size d)
	{
		lu__assert(self);
		lu__assert(mem);

		self->mem = mem; 
		self->labels_size = labels_size;
		self->h = h;
		self->d = d;

		lu_size hd = self->h * self->d;

		self->addr_to_labels = (struct lu_label_unit*) lu_mem__alloc(mem, sizeof(struct lu_label_unit) * hd);
		lu__alloc_assert(self->addr_to_labels);

		Lu_Label_Unit unit;
		for (lu_size i = 0; i < hd; i++)
		{
			unit = &self->addr_to_labels[i];

			lu_label_unit__null_init(unit);
		}

		self->label_to_addrs = (struct lu_list*) lu_mem__alloc(mem, sizeof(struct lu_list) * labels_size);
		lu__alloc_assert(self->label_to_addrs);

		return self;
	}

	static void lu_label_map__deinit(Lu_Label_Map self)
	{
		lu__assert(self);
		lu__assert(self->mem);

		lu_size hd = self->h * self->d;
		Lu_Label_Unit unit;
		for (lu_size i = 0; i < hd; i++)
		{
			unit = &self->addr_to_labels[i];

			lu_label_unit__deinit(unit, self->mem);
		}

		lu_mem__free(self->mem, (lu_p_byte) self->addr_to_labels);
		self->addr_to_labels = NULL;

		lu_mem__free(self->mem, (lu_p_byte) self->label_to_addrs);
		self->label_to_addrs = NULL;

		self->mem = NULL;
	}

///////////////////////////////////////////////////////////////////////////////
// 

	static Lu_Label lu_label_map__add_label(Lu_Label_Map self, union lu_n_addr addr, lu_size label)
	{
		lu__assert(self);

		lu_size ix = lu_label_map__addr_to_ix(self, addr);
		lu__debug_assert(ix < self->h);

		// find unit 
		Lu_Label_Unit unit = NULL;

		lu_size hd = self->h * self->d;

		for (lu_size i = 0; i < self->d; i++)
		{
			lu__debug_assert((ix + i) < hd);
			
			unit = &self->addr_to_labels[ix + i];


		}




	}

	static Lu_Label_Unit lu_label_map__get_labels(Lu_Label_Map self, union lu_n_addr addr)
	{
		
	}

	static Lu_List lu_label_map__get_units(Lu_Label_Map self, lu_size label)
	{

	}