/**
	Copyright Â© 2022 Oleh Ihorovych Novosad 
*/


///////////////////////////////////////////////////////////////////////////////
// 


	static Lu_Label_Unit lu_label_unit__init(Lu_Label_Unit self, Lu_Mem mem, union lu_n_addr addr, lu_size size)
	{
		lu__debug_assert(self);
		lu__debug_assert(mem);
		lu__debug_assert(!lu_n_addr__is_blank(&addr));
		lu__debug_assert(size > 0);

		self->addr = addr;
		self->labels = (union lu_label*) lu_mem__alloc(mem, sizeof(union lu_label) * size);
		lu__alloc_assert(self->labels);

		// init to zeros
		memset(self->labels, 0, sizeof(union lu_label) * size);

		return self;
	}

	static void lu_label_unit__deinit(Lu_Label_Unit self, Lu_Mem mem)
	{
		lu__debug_assert(self);
		lu__debug_assert(mem);

		self->addr = LU_N_ADDR__NULL;

		if (self->labels)
		{
			lu_mem__free(mem, (lu_p_byte) self->labels);
		}
	}

///////////////////////////////////////////////////////////////////////////////
// 

	Lu_Label lu_label_unit__get_label(Lu_Label_Unit self, lu_size label_ix)
	{
		lu__debug_assert(self);

		return &self->labels[label_ix];
	}