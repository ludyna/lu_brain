/**
	Copyright Â© 2021 Oleh Ihorovych Novosad 
*/


#include <stdio.h>
#include <string.h>

#include "debug.h"

struct lu_laber_gen g_label_gen = {
	.l_char = LU__ASCII_UPCASE_START,
	.l_num = 0
};

static void lu_label_gen__set(char* lbl)
{
	if (g_label_gen.l_num > 0)
	{ 
		sprintf(lbl, "%c%u", g_label_gen.l_char, g_label_gen.l_num);
	}
	else 
	{
		sprintf(lbl, "%c", g_label_gen.l_char);
	}

	++g_label_gen.l_char; 

	if (g_label_gen.l_char > LU__ASCII_UPCASE_END)
	{
		g_label_gen.l_char = LU__ASCII_UPCASE_START;
		++g_label_gen.l_num;
	}
}

void lu__debug_internal(const char * format, ...)
{
	va_list args;
	va_start (args, format);
  	//vfprintf(stderr, format, args);
  	vfprintf(stdout, format, args);
  	va_end (args);
}

void lu__debug_message_internal(const char* file, int line, const char * message)
{ 
	fprintf(stderr, "\n<%s:%d> %s", file, line, message);
}

