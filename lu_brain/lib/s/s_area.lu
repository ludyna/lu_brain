/**
	Copyright Â© 2022 Oleh Ihorovych Novosad 
*/

///////////////////////////////////////////////////////////////////////////////
// 

	static Lu_S_Area lu_s_area__create(Lu_Config config, lu_size size)
	{
		lu__assert(config);
		lu__assert(size > LU_N_CELL__SPEIAL_CELLS_SKIP); 

		Lu_Mem mem = config->s_mem;
		lu__assert(mem);

		Lu_S_Area self = (Lu_S_Area) lu_mem__alloc(mem, sizeof(struct lu_s_area));
		lu__alloc_assert(self);

		self->config;
		self->size = size;
		self->count = 0;

		self->layers = (Lu_S_Layer_Base*) lu_mem__alloc(mem, sizeof(Lu_S_Layer_Base) * size);
		lu__alloc_assert(self->layers);

		return self;
	}

	static void lu_s_area__destroy(Lu_S_Area self)
	{
		lu__assert(self);
		lu__assert(self->config);

		Lu_Mem mem = self->config->s_mem;
		lu__assert(mem);

		lu_mem__free(mem, (lu_p_byte) self->layers);

		self->layers = NULL;

		lu_mem__free(mem, (lu_p_byte) self);

	}

