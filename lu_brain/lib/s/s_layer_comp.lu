/**
	Copyright Â© 2022 Oleh Ihorovych Novosad 
*/

///////////////////////////////////////////////////////////////////////////////
// 

	static Lu_S_Layer_Comp lu_s_layer_comp__create(
		Lu_Config config, 
		Lu_S_Layer_Rec frame, 
		Lu_Rec_Comp_Config rc_config,
		lu_size layer_ix,
		lu_size area_ix
	)
	{
		lu__assert(config);
		lu__assert(frame);
		lu__assert(rc_config);

		Lu_S_Layer_Comp self = (Lu_S_Layer_Comp) lu_mem__alloc(config->s_mem, sizeof(struct lu_s_layer_comp));
		lu__assert(self);

		Lu_Rec rec = frame->rec;
		lu__assert(rec);

		lu_s_layer_base__init(
			&self->super, 
			(Lu_S_Layer_Base)frame,
			config,
			LU_S_LAYER__COMP,
			layer_ix,
			area_ix,
			lu_s_layer_comp__destroy, 
			LU_AREA_TAG__COMP
		);

		lu_s_view_p__init(
			&self->p_view, 
			config,
			LU_S_VIEW__P, 
			rec->width, 
			rec->height, 
			rc_config->v_min, 
			rc_config->v_max, 
			rc_config->p_neu_size,
			layer_ix,
			area_ix
		);

		lu_s_view_v__init(
			&self->v_view, 
			config, 
			LU_S_VIEW__V, 
			rec->width, 
			rec->height, 
			rc_config->v_min, 
			rc_config->v_max, 
			rc_config->v_neu_size,
			layer_ix,
			area_ix
		);

		return self;
	}

	static void lu_s_layer_comp__destroy(Lu_S_Layer_Base self)
	{
		lu__assert(self);
		lu__assert(self->s_mem);
		lu__assert(self->type == LU_S_LAYER__COMP);

		Lu_S_Layer_Comp layer_comp = (Lu_S_Layer_Comp) self;

		lu_s_view_p__deinit(&layer_comp->p_view);
		lu_s_view_v__deinit(&layer_comp->v_view);

		lu_s_layer_base__deinit(self);

		lu_mem__free(self->s_mem, (lu_p_byte) self);
	}

///////////////////////////////////////////////////////////////////////////////
// 
	
