/**
	Copyright Â© 2021 Oleh Ihorovych Novosad 
*/


///////////////////////////////////////////////////////////////////////////////
// 


	static Lu_S_Apex_Single lu_s_apex_single__create(Lu_Mem mem, Lu_S_Layer_Base layer)
	{
		lu__assert(mem);

		Lu_S_Apex_Single self = (Lu_S_Apex_Single) lu_mem__alloc(mem, sizeof(struct lu_s_apex_single));
		lu__assert(self);

		lu_s_apex_base__init(&self->super, LU_S_AT_SINGLE, lu_s_apex_single__destroy);
		
		self->layer = layer;

		return self;
	}

	static void lu_s_apex_single__destroy(Lu_S_Apex_Base self, Lu_Mem mem)
	{
		lu__assert(self);
		lu__assert(mem);
		lu__assert(self->type == LU_S_AT_SINGLE);

		lu_mem__free(mem, (lu_p_byte) self);
	}

///////////////////////////////////////////////////////////////////////////////
// 

	static Lu_S_Apex_Multi lu_s_apex_multi__create(Lu_Mem mem, lu_size layers_count)
	{
		lu__assert(mem);

		Lu_S_Apex_Multi self = (Lu_S_Apex_Multi) lu_mem__alloc(mem, sizeof(struct lu_s_apex_multi));
		lu__assert(self);

		lu_s_apex_base__init(&self->super, LU_S_AT_MULTI, lu_s_apex_multi__destroy);
		
		self->layers = lu_arr__create(mem, layers_count, true);

		return self;
	}

	static void lu_s_apex_multi__destroy(Lu_S_Apex_Base self, Lu_Mem mem)
	{
		lu__assert(self);
		lu__assert(mem);
		lu__assert(self->type == LU_S_AT_MULTI);

		Lu_S_Apex_Multi multi = (Lu_S_Apex_Multi) self;

		lu_arr__destroy(multi->layers);

		lu_mem__free(mem, (lu_p_byte) multi);
	}