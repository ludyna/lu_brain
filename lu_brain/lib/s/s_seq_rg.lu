/**
	Copyright Â© 2021 Oleh Ihorovych Novosad 
*/  

///////////////////////////////////////////////////////////////////////////////
// 

	static Lu_S_Seq_Rg lu_s_seq_rg__create(Lu_Mem mem, Lu_S_Cell_Mem cell_mem, lu_size recs_size)
	{
		lu__assert(mem);
		lu__assert(cell_mem);

		Lu_S_Seq_Rg self = (Lu_S_Seq_Rg) lu_mem__alloc(mem, sizeof(struct lu_s_seq_rg));
		lu__assert(self);
		
		lu_s_base_rg__init(&self->super, mem, cell_mem);


		


		return self;
	}

	static void lu_s_seq_rg__destroy(Lu_S_Seq_Rg self)
	{
		lu__assert(self);

		// 
		// Destroy all seq layers 
		// 

		for (lu_size i = 0; i < self->seq_layers_size; i++)
			lu_s_seq_layer__deinit(&self->seq_layers[i]);

		lu_mem__free(self->super.mem, (lu_p_byte) self->seq_layers);
		lu_mem__free(self->super.mem, (lu_p_byte) self);
	}


///////////////////////////////////////////////////////////////////////////////
// 

	static void lu_s_seq_rg__layers_connect(Lu_S_Seq_Rg self)
	{
		// lu__assert(self);

		// Lu_S_Seq_Layer layer;
		// Lu_S_Seq_Layer b_layer = NULL;
		// lu_size ix;

		// for(ix = 1; ix < self->layers_size; ix++)
		// {
		// 	layer = &self->layers[ix];
		// 	b_layer = &self->layers[ix - 1];
		
		// 	lu_s_seq_layer__cells_init(layer, b_layer, self->cell_mem);
		// }
	}

	static void lu_s_seq_rg__layers_disconnect(Lu_S_Seq_Rg self)
	{
		// lu__assert(self);

		// for(lu_size i = 0; i < self->layers_size; i++)
		// {
		// 	lu_s_layer_seq_cells_deinit(&self->layers[i], self->cell_mem);
		// }
	}

