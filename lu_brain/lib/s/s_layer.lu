/**
	Copyright Â© 2022 Oleh Ihorovych Novosad 
*/

///////////////////////////////////////////////////////////////////////////////
// 

	static Lu_S_Layer lu_s_layer__create(
		Lu_Config config, 
		lu_size level, 
		lu_size children_count,
		lu_size n_w,
		lu_size n_h,
		lu_size n_cell_type
	)
	{
		lu__assert(config);
		lu__assert(config->s_mem);
		Lu_S_Layer self = (Lu_S_Layer) lu_mem__alloc(config->s_mem, sizeof(struct lu_s_layer));
		lu__assert(self);

		if (children_count == 0)
		{
			lu_s_layer_base__init(
				&self->super, 
				NULL, 
				config, 
				LU_S_LAYER__LAYER, 
				level, 
				lu_s_layer__destroy,
				n_w,
				n_h,
				n_cell_type
			); 
		}
		else if (children_count == 1)
		{
			lu_s_layer_base__init_with_one_c_slot(
				&self->super, 
				NULL, 
				config, 
				LU_S_LAYER__LAYER, 
				level, 
				lu_s_layer__destroy, 
				n_w,
				n_h,
				n_cell_type
			);
		}
		else
		{
			lu_s_layer_base__init_with_arr_c_slot(
				&self->super, 
				NULL, 
				children_count, 
				config, 
				LU_S_LAYER__LAYER, 
				level, 
				lu_s_layer__destroy,
				n_w,
				n_h,
				n_cell_type
			);
		}

		return self;
	}

	static void lu_s_layer__destroy(Lu_S_Layer_Base self)
	{
		lu__assert(self);
		lu__assert(self->s_mem);

		lu_s_layer_base__deinit(self);

		lu_mem__free(self->s_mem, (lu_p_byte) self);
	}

///////////////////////////////////////////////////////////////////////////////
// 
