/**
	Copyright Â© 2022 Oleh Ihorovych Novosad 
*/

///////////////////////////////////////////////////////////////////////////////
// 

	static Lu_S_Layer lu_s_layer__create(
		Lu_Mem mem,
		lu_size level,
		lu_size children_count
	)
	{
		lu__assert(mem);
		Lu_S_Layer self = (Lu_S_Layer) lu_mem__alloc(mem, sizeof(struct lu_s_layer));
		lu__assert(self);

		if (children_count == 0)
		{
			lu_s_layer_base__init(&self->super, mem, LU_S_LT__LAYER, level, NULL, lu_s_layer__destroy); 
		}
		else if (children_count == 1)
		{
			lu_s_layer_base__init_with_one_c_slot(&self->super, mem, LU_S_LT__LAYER, level, NULL, lu_s_layer__destroy);
		}
		else
		{
			lu_s_layer_base__init_with_arr_c_slot(&self->super, mem, LU_S_LT__LAYER, level, NULL, children_count, lu_s_layer__destroy);
		}

		return self;
	}

	static void lu_s_layer__destroy(Lu_S_Layer_Base self)
	{
		lu__assert(self);
		lu__assert(self->s_mem);

		lu_s_layer_base__deinit(self);

		lu_mem__free(self->s_mem, (lu_p_byte) self);
	}

///////////////////////////////////////////////////////////////////////////////
// 
