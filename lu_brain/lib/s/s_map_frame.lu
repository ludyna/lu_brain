/**
	Copyright Â© 2022 Oleh Ihorovych Novosad 
*/

///////////////////////////////////////////////////////////////////////////////
// Frame

	static Lu_S_Map_Frame lu_s_map_frame__create(Lu_Mem mem, Lu_Rec rec, Lu_S_Map_Base p)
	{
		lu__assert(mem);
		lu__assert(rec);
		lu__assert(p);

		Lu_S_Map_Base self = (Lu_S_Map_Base) lu_mem__alloc(mem, sizeof(struct lu_s_map_base));
		lu__assert(self);

		self->mem = mem;

		self->apexes = lu_arr__create(mem, 5, true);
		lu__assert(self->apexes);

		self->bases = lu_arr__create(mem, 5, true);
		lu__assert(self->bases);

		self->p = p;
		self->c = NULL;

		return self;
	}

	static void lu_s_map_frame__make_fractal(Lu_S_Map_Frame self)
	{
		lu__assert(self);

		Lu_Mem mem = self->mem;
		lu__assert(mem);

		Lu_S_Layer_A pixels = lu_s_layer_a__create(mem, 2, 1);
	}

	static void lu_s_map_frame__unmake_fractal(Lu_S_Map_Frame self)
	{

	}